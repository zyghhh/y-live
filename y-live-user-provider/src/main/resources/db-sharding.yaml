dataSources:
  user_master: ##新表，重建的分表
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://116.196.94.167:8808/live_user?useUnicode=true&characterEncoding=utf8
    username: admin
    password: 520811CXgZYG

  user_slave0: ##新表，重建的分表
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://116.196.94.167:8809/live_user?useUnicode=true&characterEncoding=utf8
    username: admin
    password: 520811CXgZYG
#  user:  ##新表，重建的分表
#    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    jdbcUrl: jdbc:mysql://116.196.94.167:3306/live_user?useUnicode=true&characterEncoding=utf8
#    username: admin
#    password: 520811CXgZYG
#    idle-timeout: 5 #单位：分钟
#    minimum-idle: 100
#    pool-name: db-user
#    maximum-pool-size: 1000
#    connection-timeout: 30000
#    connection-init-sql: SELECT 1
#    connection-test-query: SELECT 1

rules:
  - !READWRITE_SPLITTING
    dataSources:
      user_ds:
        staticStrategy:
          writeDataSourceName: user_master
          readDataSourceNames:
            - user_slave0
  - !SINGLE
    defaultDataSource: user_ds ## 不分表分分库的默认数据源
  - !SHARDING
    tables:
      t_user:
        actualDataNodes: user_ds.t_user_${(0..99).collect(){it.toString().padLeft(2,'0')}}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: t_user-inline
    shardingAlgorithms:
      t_user-inline:
        type: INLINE
        props:
          algorithm-expression: t_user_${(user_id % 100).toString().padLeft(2,'0')}
props:
  sql-show: true